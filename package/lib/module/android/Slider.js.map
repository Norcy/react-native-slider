{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Image","Platform","StyleSheet","RCTSliderNativeComponent","SliderComponent","props","forwardedRef","_props$accessibilityS","style","compose","styles","slider","onValueChange","onSlidingStart","onSlidingComplete","onAccessibilityAction","localProps","onValueChangeEvent","event","nativeEvent","value","_disabled","disabled","accessibilityState","_accessibilityState","onChangeEvent","onSlidingStartEvent","onSlidingCompleteEvent","createElement","thumbImage","OS","resolveAssetSource","ref","onChange","onRNCSliderSlidingStart","onRNCSliderSlidingComplete","onRNCSliderValueChange","enabled","onStartShouldSetResponder","onResponderTerminationRequest","SliderWithRef","forwardRef","defaultProps","minimumValue","maximumValue","step","inverted","tapToSeek","create","height"],"sources":["Slider.tsx"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport React from 'react';\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  AccessibilityActionEvent,\n} from 'react-native';\nimport RCTSliderNativeComponent from './index';\n\nimport type {ColorValue, ViewProps} from 'react-native';\nimport type {Ref} from 'react';\n//@ts-ignore\nimport type {NativeComponent} from 'react-native/Libraries/Renderer/shims/ReactNative';\n//@ts-ignore\nimport type {ImageSource} from 'react-native/Libraries/Image/ImageSource';\n//@ts-ignore\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\n//@ts-ignore\nimport type {SyntheticEvent} from 'react-native/Libraries/Types/CoreEventTypes';\n\ntype Event = SyntheticEvent<\n  Readonly<{\n    value: number;\n    /**\n     * Android Only.\n     */\n    fromUser?: boolean;\n  }>\n>;\n\ntype IOSProps = Readonly<{\n  /**\n   * Assigns a single image for the track. Only static images are supported.\n   * The center pixel of the image will be stretched to fill the track.\n   */\n  trackImage?: ImageSource;\n\n  /**\n   * Assigns a minimum track image. Only static images are supported. The\n   * rightmost pixel of the image will be stretched to fill the track.\n   */\n  minimumTrackImage?: ImageSource;\n\n  /**\n   * Assigns a maximum track image. Only static images are supported. The\n   * leftmost pixel of the image will be stretched to fill the track.\n   */\n  maximumTrackImage?: ImageSource;\n\n  /**\n   * Permits tapping on the slider track to set the thumb position.\n   * Defaults to false on iOS. No effect on Android or Windows.\n   */\n  tapToSeek?: boolean;\n}>;\n\ntype Props = ViewProps &\n  IOSProps &\n  Readonly<{\n    /**\n     * Used to style and layout the `Slider`.  See `StyleSheet.js` and\n     * `DeprecatedViewStylePropTypes.js` for more info.\n     */\n    style?: ViewStyleProp;\n\n    /**\n     * Write-only property representing the value of the slider.\n     * Can be used to programmatically control the position of the thumb.\n     * Entered once at the beginning still acts as an initial value.\n     * The value should be between minimumValue and maximumValue,\n     * which default to 0 and 1 respectively.\n     * Default value is 0.\n     *\n     * This is not a controlled component, you don't need to update the\n     * value during dragging.\n     */\n    value?: number;\n\n    /**\n     * Step value of the slider. The value should be\n     * between 0 and (maximumValue - minimumValue).\n     * Default value is 0.\n     */\n    step?: number;\n\n    /**\n     * Initial minimum value of the slider. Default value is 0.\n     */\n    minimumValue?: number;\n\n    /**\n     * Initial maximum value of the slider. Default value is 1.\n     */\n    maximumValue?: number;\n\n    /**\n     * The color used for the track to the left of the button.\n     * Overrides the default blue gradient image on iOS.\n     */\n    minimumTrackTintColor?: ColorValue;\n\n    /**\n     * The color used for the track to the right of the button.\n     * Overrides the default blue gradient image on iOS.\n     */\n    maximumTrackTintColor?: ColorValue;\n    /**\n     * The color used to tint the default thumb images on iOS, or the\n     * color of the foreground switch grip on Android.\n     */\n    thumbTintColor?: ColorValue;\n\n    /**\n     * If true the user won't be able to move the slider.\n     * Default value is false.\n     */\n    disabled?: boolean;\n\n    /**\n     * Callback continuously called while the user is dragging the slider.\n     */\n    onValueChange?: (value: number) => void;\n\n    /**\n     * Callback that is called when the user touches the slider,\n     * regardless if the value has changed. The current value is passed\n     * as an argument to the callback handler.\n     */\n\n    onSlidingStart?: (value: number) => void;\n\n    /**\n     * Callback that is called when the user releases the slider,\n     * regardless if the value has changed. The current value is passed\n     * as an argument to the callback handler.\n     */\n    onSlidingComplete?: (value: number) => void;\n\n    /**\n     * Used to locate this view in UI automation tests.\n     */\n    testID?: string;\n\n    /**\n     * Sets an image for the thumb. Only static images are supported.\n     */\n    thumbImage?: ImageSource;\n\n    /**\n     * If true the slider will be inverted.\n     * Default value is false.\n     */\n    inverted?: boolean;\n\n    /**\n     * A string of one or more words to be announced by the screen reader.\n     * Otherwise, it will announce the value as a percentage.\n     * Requires passing a value to `accessibilityIncrements` to work correctly.\n     * Should be a plural word, as singular units will be handled.\n     */\n    accessibilityUnits?: string;\n\n    /**\n     * An array of values that represent the different increments displayed\n     * by the slider. All the values passed into this prop must be strings.\n     * Requires passing a value to `accessibilityUnits` to work correctly.\n     * The number of elements must be the same as `maximumValue`.\n     */\n    accessibilityIncrements?: Array<string>;\n  }>;\n\n/**\n * A component used to select a single value from a range of values.\n *\n * ### Usage\n *\n * The example below shows how to use `Slider` to change\n * a value used by `Text`. The value is stored using\n * the state of the root component (`App`). The same component\n * subscribes to the `onValueChange`  of `Slider` and changes\n * the value using `setState`.\n *\n *```\n * import React from 'react';\n * import { StyleSheet, Text, View, Slider } from 'react-native';\n *\n * export default class App extends React.Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {\n *       value: 50\n *     }\n *   }\n *\n *   change(value) {\n *     this.setState(() => {\n *       return {\n *         value: parseFloat(value)\n *       };\n *     });\n *   }\n *\n *   render() {\n *     const {value} = this.state;\n *     return (\n *       <View style={styles.container}>\n *         <Text style={styles.text}>{String(value)}</Text>\n *         <Slider\n *           step={1}\n *           maximumValue={100}\n *           onValueChange={this.change.bind(this)}\n *           value={value} />\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     flexDirection: 'column',\n *     justifyContent: 'center'\n *   },\n *   text: {\n *     fontSize: 50,\n *     textAlign: 'center'\n *   }\n * });\n *```\n *\n */\nconst SliderComponent = (\n  props: Props,\n  forwardedRef?: Ref<typeof RCTSliderNativeComponent>,\n) => {\n  const style = StyleSheet.compose(styles.slider, props.style);\n\n  const {\n    onValueChange,\n    onSlidingStart,\n    onSlidingComplete,\n    onAccessibilityAction,\n    ...localProps\n  } = props;\n\n  const onValueChangeEvent = onValueChange\n    ? (event: Event) => {\n        onValueChange(event.nativeEvent.value);\n      }\n    : null;\n\n  const _disabled =\n    typeof props.disabled === 'boolean'\n      ? props.disabled\n      : props.accessibilityState?.disabled === true;\n\n  const _accessibilityState =\n    typeof props.disabled === 'boolean'\n      ? {...props.accessibilityState, disabled: props.disabled}\n      : props.accessibilityState;\n\n  const onChangeEvent = onValueChangeEvent;\n  const onSlidingStartEvent = onSlidingStart\n    ? (event: Event) => {\n        onSlidingStart(event.nativeEvent.value);\n      }\n    : null;\n  const onSlidingCompleteEvent = onSlidingComplete\n    ? (event: Event) => {\n        onSlidingComplete(event.nativeEvent.value);\n      }\n    : null;\n\n  return (\n    <RCTSliderNativeComponent\n      {...localProps}\n      accessibilityState={_accessibilityState}\n      thumbImage={\n        Platform.OS === 'web'\n          ? props.thumbImage\n          : Image.resolveAssetSource(props.thumbImage)\n      }\n      ref={forwardedRef}\n      style={style}\n      onChange={onChangeEvent}\n      onRNCSliderSlidingStart={onSlidingStartEvent}\n      onRNCSliderSlidingComplete={onSlidingCompleteEvent}\n      onRNCSliderValueChange={onValueChangeEvent}\n      enabled={!_disabled}\n      disabled={_disabled}\n      onStartShouldSetResponder={() => true}\n      onResponderTerminationRequest={() => false}\n    />\n  );\n};\n\nconst SliderWithRef = React.forwardRef(SliderComponent);\n\n/* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an error\n * found when Flow v0.89 was deployed. To see the error, delete this comment\n * and run Flow. */\n\nSliderWithRef.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  inverted: false,\n  tapToSeek: false,\n};\n\nlet styles = StyleSheet.create(\n  Platform.OS === 'ios' ? {slider: {height: 40}} : {slider: {}},\n);\n\nexport default SliderWithRef;\n"],"mappings":"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"}